/*Призначення файлу:Відповідає за взаємодію з API сервісу Pixabay:
      1.Робить HTTP - запит через axios.
      2.Надсилає пошуковий запит, який ввів користувач.
      3.Отримує масив зображень з Pixabay.
      4.Повертає ці зображення в основний застосунок.*/

// Імпортую бібліотеку для HTTP-запитів, вона спрощує роботу з HTTP-запитами
import axios from 'axios';

//Створюю константи для роботи з API Pixabay
const API_KEY = '50290691-d51719558e36c91c48babc26d'; // Мій унікальний  API-ключ сервісу Pexibay. Без нього сервер не дозволить зробити запит.

const BASE_URL = 'https://pixabay.com/api/'; // Базова URL-адреса для запитів, до якого нижче я додаю параметри пошуку (ключ, запит, сторінка тощо)

//Кількість зображень, які отримую за один запит (на одну сторінку)
const PER_PAGE = 15;

// Функція для отримання зображень за пошуковим запитом
export async function getImagesByQuery(query, page = 1) {

  // перевірка отриманого параметра функції
  console.log('Виклик функції getImagesByQuery із запитом:', query,page);

  /*Створюю змінну де кладу параметри запиту, які будуть передані у URL.Використовуючи цю змінну, я передаю параметри у функцію axios.get, яка додає їх до запиту в форматі URL-параметрів (query string).*/

  const params = {
    //змінна приймає об'єкт з усіма параметрами які потрібні до API
    key: API_KEY,                 // Мій ключ для автентифікації
    q: query,                    // Пошукове слово, що користувач ввів в пошукове поле
    image_type: 'photo',        // фільтрую лише зображення
    orientation: 'horizontal', // Орієнтація зображень-горізогтальна
    safesearch: true,         // Фільтр для безпечного пошуку
    per_page: PER_PAGE,      // Максимальна кількість результатів за запитом
    page: page,             // поточна сторінка
  };

  //тут я прописую обробку помилки яка може виникнути під час запиту.Відбувається виклик axios.get
  try {
    // Виконую GET-запит до API з використанням axios
    const response = await axios.get(BASE_URL, { params });

    // Повертаю дані (масив зображень hits)
    return response.data;
  } catch (error) {
   
    // Якщо сталася помилка, викидаю її для обробки на рівні виклику функції
    throw error;
  }
}
