{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n\n// Імпортую бібліотеку для HTTP-запитів\nimport axios from 'axios';\n\n//Створюю константи для роботи з API Pixabay\nconst API_KEY = '50290691-d51719558e36c91c48babc26d'; // Мій унікальний  API-ключ сервісу Pexibay\n\nconst BASE_URL = 'https://pixabay.com/api/'; // Базова URL-адреса для запитів\n\nconst PER_PAGE = 15;\n\n// Функція для отримання зображень за пошуковим запитом\nexport async function getImagesByQuery(query) {\n  // перевірка отриманого параметра функції\n  // console.log('Виклик функції getImagesByQuery із запитом:', query);\n\n  /*Створюю змінну де кладу параметри запиту, які будуть передані у URL.Використовуючи цю змінну, я передаю параметри у функцію axios.get, яка додає їх до запиту в форматі URL-параметрів (query string).*/\n  const params = {\n    key: API_KEY, // Мій ключ для автентифікації\n    q: query, // Пошукове слово, що користувач ввів в пошукове поле\n    image_type: 'photo', // фільтрую лише зображення\n    orientation: 'horizontal', // Орієнтація зображень-горізогтальна\n    safesearch: true, // Фільтр для безпечного пошуку\n    per_page: 15, // Максимальна кількість результатів за запитом\n    page: 1,\n  };\n\n  //тут я прописую обробку помилки яка може виникнути під час запиту.Відбувається виклик axios.get  \n  try {\n    // Виконую GET-запит до API з використанням axios\n    const response = await axios.get(BASE_URL, { params });\n    // Повертаю дані (масив зображень hits)\n    return response.data;\n  } catch (error) {\n    // Якщо сталася помилка, викидаю її для обробки на рівні виклику функції\n    throw error;\n  }\n}","// /*Призначення:\n\n\n// Імпортую бібліотеку для лайтбоксу\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Знаходжу контейнер для галереї\nconst galleryContainer = document.querySelector('.gallery'); // Вибираю елемент галереї за класом \"gallery\"\n\n// знаходжу кнопку для пролістування галереі\nconst loadMoreButton = document.querySelector('.select');\n\n// знаходжу індікатор завантаження\nconst loader = document.querySelector('.loader');\n\n// перевірка елемента галереї\n// console.log('Контейнер галереї знайдено:', galleryContainer);\n\nlet lightbox = null; // Змінна для екземпляра SimpleLightbox\n// console.log('Ініціалізовано змінну для SimpleLightbox:', lightbox); // перевіряю початкового значення змінної\n\n// Функція для створення галереї з масиву зображень\nexport function createGallery(images) {\n  // Перевіряю отриманий масив зображень\n  console.log('Виклик createGallery. Масив зображень:', images);\n\n  try {\n    // Генерую HTML-розмітку для кожного елемента з масиву зображень\n    const markup = images\n      .map(\n        ({\n          webformatURL, // URL для відображення маленького зображення\n          largeImageURL, // URL для великого зображення\n          tags, // Опис зображення\n          likes, // Кількість лайків\n          views, // Кількість переглядів\n          comments, // Кількість коментарів\n          downloads, // Кількість завантажень\n        }) => {\n          //Виводжу  дані, які обробляються.\n          console.log('Обробка зображення:', {\n            webformatURL,\n            largeImageURL,\n            tags,\n          });\n          return `\n        <li class=\"gallery-item\">\n          <a href=\"${largeImageURL}\" class=\"gallery-link\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n        <div class=\"info\">\n        <p><b>Likes:</b> ${likes}</p>\n        <p><b>Views:</b> ${views}</p>\n        <p><b>Comments:</b> ${comments}</p>\n        <p><b>Downloads:</b> ${downloads}</p>\n      </div>\n    </li>`;\n        }\n      )\n\n      //Метод .join('') перетворює масив рядків, отриманих після виконання .map(), в єдиний рядок.\n      .join('');\n\n    // Додаю згенеровану розмітку в контейнер галереї\n    galleryContainer.insertAdjacentHTML('beforeend', markup);\n\n    // Перевіряю чи вже існує екземпляр SimpleLightbox\n    if (lightbox) {\n      lightbox.refresh(); // Якщо так,оновлюю існуючий екземпляр лайтбоксу для нових елементів\n    } else {\n      //створюю новий екземпляр SimpleLightbox\n      lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt', // Використовую атрибут \"alt\" для підписів зображення\n        captionDelay: 250, // Затримка перед показом підпису\n      });\n\n      //перевіряю створення\n      // console.log('Створено новий екземпляр SimpleLightbox:', lightbox);\n\n      // Показуємо кнопку після додавання зображень\n    }\n    // Показати кнопку \"Load more\" якщо є зображення\n    if (galleryContainer.children.length > 0) {\n      loadMoreButton.classList.remove('is-hidden');\n    }\n   \n  } catch (error) {\n    console.error('Помилка у createGallery:', error);\n    throw error;\n  }\n}\n// Функція для очищення галереї\nexport async function clearGallery() {\n  try {\n    galleryContainer.innerHTML = ''; // видаляю весь HTML-контент с контейнера галереї\n\n    // Сховати кнопку під час нового пошуку\n   await hideLoadMoreButton();\n\n    console.log('Галерея очищена.');\n  } catch (error) {\n\n    // Обробка помилок під час очищення\n    console.error('Помилка у функції clearGallery:', error);\n    throw new Error('Не вдалося очистити галерею.');\n  }\n}\n\n// Функція для відображення\n\nexport async function showLoader() {\n  // console.log('Виклик функції showLoader.'); //  виклику функції\n\n  try {\n    //\n    loader.style.display = 'block';\n\n    console.log('Клас \"loading\" додано до тега <body>.'); // підтвердження додавання класу після невірного вводу\n  } catch (error) {\n    // Обробка помилок під час відображення лоадера\n    console.error('Помилка у функції showLoader:', error);\n    throw new Error('Не вдалося показати лоадер.');\n  }\n}\n\n// Функція для приховування\nexport async function hideLoader() {\n  // console.log('Виклик функції hideLoader.'); //  виклик\n  try {\n    //  document.body.classList.remove('loading');  // Видаляю клас \"loading\" з <body>, щоб приховати стилі лоадера\n    loader.style.display = 'none';\n    // console.log('Клас \"loading\" видалено з тега <body>.'); //  підтвердження видалення класу\n  } catch (error) {\n    // Обробка помилок під час приховування лоадера\n    console.error('Помилка у функції hideLoader:', error);\n    throw new Error('Не вдалося приховати лоадер.');\n  }\n}\n// Показати кнопку\nexport async function showLoadMoreButton() {\n  try {\n    loadMoreButton.classList.remove('is-hidden');\n  } catch (error) {\n    console.error('Помилка при показі кнопки Load more:', error);\n    throw error;\n  }\n}\n// Приховати кнопку\nexport async function hideLoadMoreButton() {\n  try {\n    loadMoreButton.classList.add('is-hidden');\n  } catch (error) {\n    console.error('Помилка при приховуванні кнопки Load more:', error);\n    throw error;\n  }\n}\n\n\n\n\n\n\n\n\n","\n\nimport { getImagesByQuery } from './js/pixabay-api.js';\nimport {\n  createGallery,\n  clearGallery,\n  showLoadMoreButton,\n  hideLoadMoreButton,\n} from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst input = form.querySelector('input[name=\"search-text\"]');\nconst loader = document.querySelector('.loader'); // індикатор завантаження\nconst loadMoreButton = document.querySelector('.select'); // кнопка Load More\n\nlet currentQuery = '';\nlet currentPage = 1;\nlet totalHits = 0;\n\n// Показати лоадер\nfunction showLoader() {\n  if (loader) loader.style.display = 'block';\n}\n\n// Сховати лоадер\nfunction hideLoader() {\n  if (loader) loader.style.display = 'none';\n}\n\n// Функція штучної затримки\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// Обробник сабміту форми\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const query = input.value.trim();\n\n  if (!query) {\n    iziToast.error({\n      title: 'Помилка',\n      message: 'Будь ласка, введіть пошуковий запит.',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  try {\n    // Сховати кнопку \"Load More\" перед виконанням запиту\n    hideLoadMoreButton();\n    // Показати лоадер\n    showLoader();\n\n    currentQuery = query;\n    currentPage = 1;\n\n    clearGallery();\n\n    // Штучна затримка для демонстрації лоадера\n    await delay(2000);\n\n    const data = await getImagesByQuery(currentQuery, currentPage);\n\n    totalHits = data.totalHits;\n\n    if (!data.hits || data.hits.length === 0) {\n      iziToast.info({\n        title: 'Нічого не знайдено',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      });\n      hideLoader();\n      return;\n    }\n\n    createGallery(data.hits);\n\n    iziToast.success({\n      title: 'Успіх',\n      message: `Знайдено ${data.hits.length} зображень.`,\n      position: 'topRight',\n      timeout: 3000,\n    });\n\n    if (currentPage * 15 >= totalHits) {\n      iziToast.info({\n        title: 'Кінець результатів',\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n      });\n      hideLoadMoreButton();\n    } else {\n      showLoadMoreButton();\n    }\n  } catch (error) {\n    console.error('Помилка запиту:', error);\n    iziToast.error({\n      title: 'Помилка',\n      message: 'Не вдалося завантажити зображення. Спробуйте пізніше.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader();\n    input.value = '';\n  }\n});\n\n// Обробник кнопки Load More\nloadMoreButton.addEventListener('click', async () => {\n  try {\n    currentPage += 1;\n\n    // Сховати кнопку \"Load More\" перед виконанням запиту\n    hideLoadMoreButton();\n    // Показати лоадер\n    showLoader();\n\n    // Штучна затримка для демонстрації лоадера\n    await delay(2000);\n\n    const data = await getImagesByQuery(currentQuery, currentPage);\n\n    if (!data.hits || data.hits.length === 0) {\n      iziToast.info({\n        title: 'Кінець результатів',\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n      });\n      hideLoadMoreButton();\n      hideLoader();\n      return;\n    }\n\n    createGallery(data.hits);\n\n    // Плавне прокручування вниз на 2 висоти карточки\n    const firstCard = document.querySelector('.gallery .photo-card');\n    if (firstCard) {\n      const cardHeight = firstCard.getBoundingClientRect().height;\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n    }\n\n    if (currentPage * 15 >= totalHits) {\n      hideLoadMoreButton();\n      iziToast.info({\n        title: 'Кінець результатів',\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n      });\n    } else {\n      showLoadMoreButton();\n    }\n  } catch (error) {\n    console.error('Помилка при завантаженні додаткових зображень:', error);\n    iziToast.error({\n      title: 'Помилка',\n      message: 'Не вдалося завантажити додаткові зображення.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader();\n  }\n});\n\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","error","galleryContainer","loadMoreButton","lightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","hideLoadMoreButton","showLoadMoreButton","form","input","loader","currentQuery","currentPage","totalHits","showLoader","hideLoader","delay","ms","resolve","event","iziToast","data","firstCard","cardHeight"],"mappings":"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"}